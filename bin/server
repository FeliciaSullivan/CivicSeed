#!/usr/bin/env node

var rootDir = process.cwd() || '.',
	ss = require('socketstream'),
	express = require('express'),
	app = exports.app = express(),
	ssJade = require('ss-jade'),
	ssStylus = require('ss-stylus'),
	config = require(rootDir + '/config'),
	port = config.get('PORT'),
	nodeEnv = config.get('ENVIRONMENT'),
	cloudPath = config.get('CLOUD_PATH'),
	flash = require('connect-flash'),
	passport = require('passport'),
	service = require(rootDir + '/service'),
	controllers = require(rootDir + '/controllers'),
	CivicSeed = require(rootDir + '/CivicSeed'),
	server,
	redisConfig;

console.log('\n\n     ___      _               _                       ___                       _   '.red);
console.log('    / __|    (_)    __ __    (_)     __       '.red + 'o O O'.white + '  / __|    ___     ___    __| |  '.red);
console.log('   | (__     | |    \\ V /    | |    / _|     '.red + 'o'.white + '       \\__ \\   / -_)   / -_)  / _` |  '.red);
console.log('    \\___|   _|_|_   _\\_/_   _|_|_   \\__|_   '.red + 'TS__['.green + 'O'.white + ']'.green + '  |___/   \\___|   \\___|  \\__,_|  '.red);
console.log('  _'.white + '|"""""|'.green + '_'.white + '|"""""|'.green + '_'.white + '|"""""|'.green + '_'.white + '|"""""|'.green + '_'.white + '|"""""| {======|'.green + '_'.white + '|"""""|'.green + '_'.white + '|"""""|'.green + '_'.white + '|"""""|'.green + '_'.white + '|"""""| '.green);
console.log('  '.green + '"'.white + '`-'.green + '0'.white + '-'.green + '0'.white + '-\''.green + '"'.white + '`-'.green + '0'.white + '-'.green + '0'.white + '-\''.green + '"'.white + '`-'.green + '0'.white + '-'.green + '0'.white + '-\''.green + '"'.white + '`-'.green + '0'.white + '-'.green + '0'.white + '-\''.green + '"'.white + '`-'.green + '0'.white + '-'.green + '0'.white + '-\'./'.green + 'o--000'.white + '\''.green + '"'.white + '`-'.green + '0'.white + '-'.green + '0'.white + '-\''.green + '"'.white + '`-'.green + '0'.white + '-'.green + '0'.white + '-\''.green + '"'.white + '`-'.green + '0'.white + '-'.green + '0'.white + '-\''.green + '"'.white + '`-'.green + '0'.white + '-'.green + '0'.white + '-\' '.green);

// Setup database services, based on the config
service.connectMongoose(app, function(databases) {

	// ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ --- >>>
	// ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ --- >>> EXPRESS
	// ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ --- >>>

	console.log('   * * * * * * * * * * * *   Configuring Express   * * * * * * * * * * * *   '.yellow);

	app.set('views', rootDir + '/client/views');
	app.set('view engine', 'jade');
	app.use(express.logger(':method :url :status'));
	app.use(express.bodyParser());
	app.use(express.methodOverride());
	app.use(app.router);
	// app.use(express.cookieParser());
	// app.use(express.session({secret: 'secret'}));
	// app.use(express.compiler({src: __dirname + '/wwwroot', enable: ['stylus']}));
	app.use(flash());
	app.use(passport.initialize());
	app.use(passport.session());

	// var expressMiddleware = {
	// 	account: require(rootDir + '/server/middleware/account'),
	// };

	// // var temply1 = expressMiddleware.account.authenticated;
	// // var temply2 = expressMiddleware.account.authenticated();
	// // console.log(temply1, temply2);
	// app.use(expressMiddleware.account.authenticated('express'));

	// ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ --- >>>
	// ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ --- >>> SOCKET STREAM
	// ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ --- >>>

	console.log('   * * * * * * * * * * * *   Configuring SocketStream   * * * * * * * * * * * *   '.yellow);

	// Code Formatters
	ss.client.formatters.add(ssJade, {
		locals: {
			// title: 'Hollow :: Home',
			CivicSeed: JSON.stringify(CivicSeed.getGlobals())
		}
	});
	ssStylus.prependStylus('$cloudPath = \'' + cloudPath + '/\'');
	ss.client.formatters.add(ssStylus);

	// // Server-side compiled templates for client
	// ss.client.templateEngine.use(require('ss-hogan'));

	ss.client.templateEngine.use(require('ss-clientjade'));

	// using engine.io for web sockets transport
	if(config.get('USE_LOCAL_IP')) {
		service.getAndSetNetworkIp(function() {
			var ip = config.get('IP');
			ss.ws.transport.use(require('ss-engine.io'), { client: { host: ip, port: port } });
		});
	} else {
		ss.ws.transport.use(require('ss-engine.io'));
	}

	// use redis
	if(config.get('USE_REDIS')) {
		redisConfig = {
			host: config.get('REDIS_HOST'),
			port: config.get('REDIS_PORT'),
			pass: config.get('REDIS_PW'),
			db: config.get('REDIS_DB')
		};
		ss.session.store.use('redis', redisConfig);
		ss.publish.transport.use('redis', redisConfig);
		ss.session.options.maxAge = 1261440000000; // forty years
	}

	// make the models accessible to Socket Stream
	ss.api.add('service', service);

	// connect mongoose to ss internal API
	ss.api.add('db', databases.mongooseDb);

	controllers.loadAll(app, service, function() {

		if(nodeEnv === 'development') {
			app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));
		}

		if(nodeEnv === 'testing' || nodeEnv === 'production') {
			ss.client.packAssets({
				cdn: {
					js: function(file) { return cloudPath + file.path; },
					css: function(file) { return cloudPath + file.path; },
					html: function(file) { return cloudPath + file.path; }
				}
			});
			// var oneYear = 31557600000;
			// app.use(express.static(__dirname + '/public', { maxAge: oneYear }));
			// app.use(express.errorHandler());
		}

		// ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ --- >>>
		// ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ --- >>> START THE APP
		// ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ --- >>>

		server = app.listen(port, function() {

			var local = server.address();
			console.log('   * * * * * * * * * * * *   Express server listening @ http://%s:%d/ in ' + '%s'.yellow.inverse + ' mode\n\n', local.address, local.port, app.settings.env);

			// Start SocketStream
			ss.start(server);

			// Append SocketStream middleware to the stack
			app.stack = ss.http.middleware.stack.concat(app.stack);

		});

	});

});